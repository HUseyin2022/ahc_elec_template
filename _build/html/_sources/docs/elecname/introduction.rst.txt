.. include:: substitutions.rst

Introduction
============

Leader election is neccessary for fault tolerant services in asynchronous distributed systems. Leader solves consensus problem, provide fault tolerant and system resilience. The election algorithms provide the coordinator in order to serve a unique coordinator among a group of entity. Distributed algorithms need a process to act coordinator in centralized mutual exclusion or deadlock detection. Selection a leader ensures continuous coordination between entitties. 
These algorithms also provide a means to recover from failures of the coordinator. However leader selection can cause network congestion in large scale distributed systems since processes change message very often.

If current leader becomes unavailable, the algorithm provides a leader for the entities. A new leader is decided based on the availability, node priority or a unique identifier to each active process.
The goal of election algorithms to conclude all process agree on the new coordinator. 

LEader election in distributed systems has challenges such as network communication, node failures, concurrent elections, scalability, synchronization and byzantine failures.


Our primary contributions consist of the following:
    
    - Implementation of both the Ring Election: Dolev-Klawe-Rodeh algorithm and Election: Echo algorithm with extinction Algorithm on the AHCv2 platform. The implementation specifics are detailed in Section XX.
    - Examination of the performance of these algorithms across diverse topologies and usage scenarios. Results from these investigations are outlined in Section XXX.
    - Comprehensive comparison and contrast of the algorithms based on criteria such as accuracy, overhead, complexity, and fault tolerance. Key insights derived from these comparisons are elaborated upon in Section XXXX.